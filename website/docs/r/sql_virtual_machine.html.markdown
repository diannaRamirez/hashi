---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/Azure/magic-module-specs
#
# ----------------------------------------------------------------------------
subcategory: ""
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_sql_virtual_machine"
sidebar_current: "docs-azurerm-resource-sql-virtual-machine"
description: |-
  Manage Azure SqlVirtualMachine instance.
---

# azurerm_sql_virtual_machine

Manage Azure SqlVirtualMachine instance.


## Example Usage

```hcl
resource "azurerm_resource_group" "example" {
  name     = "example-resource-group"
  location = "%s"
}

resource "sql_virtual_machines" "example" {
  resource_group_name = "${azurerm_resource_group.example.name}"
  location            = "${azurerm_resource_group.example.location}"
}
```

## Argument Reference

The following arguments are supported:

* `resource_group` - (Required) Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. Changing this forces a new resource to be created.

* `location` - (Required) Resource location. Changing this forces a new resource to be created.

* `sql_virtual_machine_name` - (Required) Name of the SQL virtual machine. Changing this forces a new resource to be created.

* `auto_backup_settings` - (Optional) One `auto_backup_setting` block defined below.

* `auto_patching_settings` - (Optional) One `auto_patching_setting` block defined below.

* `identity` - (Optional) One `identity` block defined below.

* `key_vault_credential_settings` - (Optional) One `key_vault_credential_setting` block defined below.

* `sql_image_offer` - (Optional) SQL image offer. Examples include SQL2016-WS2016, SQL2017-WS2016.

* `sql_image_sku` - (Optional) SQL Server edition type. Defaults to `Developer`.

* `sql_management` - (Optional) SQL Server Management type. Defaults to `Full`.

* `sql_server_license_type` - (Optional) SQL Server license type. Defaults to `PAYG`.

* `sql_virtual_machine_group_resource_id` - (Optional) ARM resource id of the SQL virtual machine group this SQL virtual machine is or will be part of.

* `server_configurations_management_settings` - (Optional) One `server_configurations_management_setting` block defined below.

* `storage_configuration_settings` - (Optional) One `storage_configuration_setting` block defined below.

* `virtual_machine_resource_id` - (Optional) ARM Resource id of underlying virtual machine created from SQL marketplace image.

* `wsfc_domain_credentials` - (Optional) One `wsfc_domain_credential` block defined below.

* `tags` - (Optional) Resource tags. Changing this forces a new resource to be created.

---

The `auto_backup_setting` block supports the following:

* `enable` - (Optional) Enable or disable autobackup on SQL virtual machine.

* `enable_encryption` - (Optional) Enable or disable encryption for backup on SQL virtual machine.

* `retention_period` - (Optional) Retention period of backup: 1-30 days.

* `storage_account_url` - (Optional) Storage account url where backup will be taken to.

* `storage_access_key` - (Optional) Storage account key where backup will be taken to.

* `password` - (Optional) Password for encryption on backup.

* `backup_system_dbs` - (Optional) Include or exclude system databases from auto backup.

* `backup_schedule_type` - (Optional) Backup schedule type. Defaults to `Manual`.

* `full_backup_frequency` - (Optional) Frequency of full backups. In both cases, full backups begin during the next scheduled time window. Defaults to `Daily`.

* `full_backup_start_time` - (Optional) Start time of a given day during which full backups can take place. 0-23 hours.

* `full_backup_window_hours` - (Optional) Duration of the time window of a given day during which full backups can take place. 1-23 hours.

* `log_backup_frequency` - (Optional) Frequency of log backups. 5-60 minutes.

---

The `auto_patching_setting` block supports the following:

* `enable` - (Optional) Enable or disable autopatching on SQL virtual machine.

* `day_of_week` - (Optional) Day of week to apply the patch on. Defaults to `Monday`.

* `maintenance_window_starting_hour` - (Optional) Hour of the day when patching is initiated. Local VM time.

* `maintenance_window_duration` - (Optional) Duration of patching.

---

The `identity` block supports the following:

* `type` - (Optional) The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource. Defaults to `SystemAssigned`.

---

The `key_vault_credential_setting` block supports the following:

* `enable` - (Optional) Enable or disable key vault credential setting.

* `credential_name` - (Optional) Credential name.

* `azure_key_vault_url` - (Optional) Azure Key Vault url.

* `service_principal_name` - (Optional) Service principal name to access key vault.

* `service_principal_secret` - (Optional) Service principal name secret to access key vault.

---

The `server_configurations_management_setting` block supports the following:

* `sql_connectivity_update_settings` - (Optional) One `sql_connectivity_update_setting` block defined below.

* `sql_workload_type_update_settings` - (Optional) One `sql_workload_type_update_setting` block defined below.

* `sql_storage_update_settings` - (Optional) One `sql_storage_update_setting` block defined below.

* `additional_features_server_configurations` - (Optional) One `additional_features_server_configuration` block defined below.


---

The `sql_connectivity_update_setting` block supports the following:

* `connectivity_type` - (Optional) SQL Server connectivity option. Defaults to `LOCAL`.

* `port` - (Optional) SQL Server port.

* `sql_auth_update_user_name` - (Optional) SQL Server sysadmin login to create.

* `sql_auth_update_password` - (Optional) SQL Server sysadmin login password.

---

The `sql_workload_type_update_setting` block supports the following:

* `sql_workload_type` - (Optional) SQL Server workload type. Defaults to `GENERAL`.

---

The `sql_storage_update_setting` block supports the following:

* `disk_count` - (Optional) Virtual machine disk count.

* `starting_device_id` - (Optional) Device id of the first disk to be updated.

* `disk_configuration_type` - (Optional) Disk configuration to apply to SQL Server. Defaults to `NEW`.

---

The `additional_features_server_configuration` block supports the following:

* `is_r_services_enabled` - (Optional) Enable or disable R services (SQL 2016 onwards).

---

The `storage_configuration_setting` block supports the following:

* `sql_data_settings` - (Optional) One `sql_data_setting` block defined below.

* `sql_log_settings` - (Optional) One `sql_log_setting` block defined below.

* `sql_temp_db_settings` - (Optional) One `sql_temp_db_setting` block defined below.

* `disk_configuration_type` - (Optional) Disk configuration to apply to SQL Server. Defaults to `NEW`.

* `storage_workload_type` - (Optional) Storage workload type. Defaults to `GENERAL`.


---

The `sql_data_setting` block supports the following:

* `luns` - (Optional) Logical Unit Numbers for the disks.

* `default_file_path` - (Optional) SQL Server default file path

---

The `sql_log_setting` block supports the following:

* `luns` - (Optional) Logical Unit Numbers for the disks.

* `default_file_path` - (Optional) SQL Server default file path

---

The `sql_temp_db_setting` block supports the following:

* `luns` - (Optional) Logical Unit Numbers for the disks.

* `default_file_path` - (Optional) SQL Server default file path

---

The `wsfc_domain_credential` block supports the following:

* `cluster_bootstrap_account_password` - (Optional) Cluster bootstrap account password.

* `cluster_operator_account_password` - (Optional) Cluster operator account password.

* `sql_service_account_password` - (Optional) SQL service account password.

## Attributes Reference

The following attributes are exported:

* `provisioning_state` - Provisioning state to track the async operation status.

* `id` - Resource ID.

* `name` - Resource name.

* `type` - Resource type.


## Import

Sql Virtual Machine can be imported using the `resource id`, e.g.

```shell
$ terraform import azurerm_sql_virtual_machine.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example-resource-group/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/example-sql-virtual-machine
```
